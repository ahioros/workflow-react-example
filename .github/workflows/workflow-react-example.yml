name: workflow-react-example
on:
  push:
    branches:
    - master
jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Install Node.js
      uses: actions/setup-node@v4.0.0
      with:
        node-version: 15.x
    - name: npm install
      run: npm install
    - name: npm lint
      run: npm run lint
    - name: npm prettier
      run: npm install prettier && npx prettier . --write && npm run prettier
    - name: npm test
      run: CI=true npm run test
    - name: npm build
      run: npm run build
  Containerized-containerizedReactApp:
    needs:
    - CI
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v4.1.0
    - name: Login
      uses: docker/login-action@v3.3.0
      with:
        username: "${{ secrets.DOCKERHUBCONNECTION_DOCKER_USERNAME }}"
        password: "${{ secrets.DOCKERHUBCONNECTION_DOCKER_PASSWORD }}"
    - name: BuildAndPush
      uses: docker/login-action@v3.3.0
      with:
        username: "${{ secrets.DOCKERHUBCONNECTION_DOCKER_USERNAME }}"
        password: "${{ secrets.DOCKERHUBCONNECTION_DOCKER_PASSWORD }}"
    - name: BuildAndPush
      run: docker build . --file "Dockerfile" -t ahioros/rdicidr:latest -t ahioros/rdicidr:${{ github.run_id }}
    - name: BuildAndPush
      run: docker push ahioros/rdicidr:${{ github.run_id }}
    - name: Logout
      run: docker logout
      #  Deploy-Deployment:
      #    needs:
      #    - Containerized-containerizedReactApp
      #    runs-on: ubuntu-latest
      #    steps:
      #    - name: checkout
      #      uses: actions/checkout@v4.1.0
#     # This action only supports checking out GitHub repositories
#     - uses: actions/checkout@v4.1.0
#       with:
#         repository: DockerHub Test/Deploy
#         fetch-depth: 0
#####
#    - name: Deploy
#      run: |-
#        TAG=${{ github.run_id }}
#        EXP="image: ahioros/rdicidr:[0-9]+"
#        REP="image: ahioros/rdicidr:$TAG"
#        sed -E -i "s|$EXP|$REP|g" k8s/02-deployment.yaml
#        git config user.name  "Argo CD"
#        git config user.email "ArgoCD@example.com"
#        git checkout master --
#        git add --all
#        git commit -m "Deployment ID: ${{ github.run_id }}"
#        git push origin master
#      shell: bash
